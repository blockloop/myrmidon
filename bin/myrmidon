#!/usr/bin/env node

var lib = require('../lib/myrmidon.js');
var fs = require('fs');
var path = require('path');
var _ = require('lodash');
var util = require('../lib/utils');
var prompt = require('read');
var program = require('commander');
var colors = require('colors');
var moment = require('moment');
var now = moment;

function endOfDay(val) {
	return moment(val).endOf('day');
}

function startOfDay(val) {
	return moment(val).startOf('day');
}

program
	.version(require('../package.json').version)
	.option('-c, --config', 'Specify a config file to use');


program
	.command('download-playlist <id>')
	.action(function(id, opts) {
		lib.downloadPlaylist(id, opts);
	});

program
	.command('add-by-user <user>')
	.action(function (user) {
		lib.getFeedsForUser(user, function(items){
			console.log('Found '+ items.length +' playlists for '+ user);
			console.log();

			_.forEach(items, function(item, i){
				console.log("\t"+ i + ": " + item.title);
			});

			prompt({prompt: "\nChoose a playlist: "}, function(err, result){
				lib.addFeed(items[result]);
			});
		});
	});

program
	.command('import-feed <userId>')
	.action(function (user) {
		lib.importFeed(user);
	});


program
	.command('download <user>')
	.option('--after <2014-01-01>', 'Only download videos published after this day', moment, moment(0))
	.option('--before <2014-01-01>', 'Only download videos published before this day', moment, now().endOf('day'))
	.action(function (user, opts) {
		lib.downloadNewSubscriptions(user, opts);
	});


program
	.command('*')
	.action(program.help);


program
	.parse(process.argv);